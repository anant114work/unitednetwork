# Generated by Django 4.2.7 on 2025-06-25 09:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('user_type', models.CharField(choices=[('admin_l1', 'Admin Level 1'), ('admin_l2', 'Admin Level 2'), ('admin_l3', 'Admin Level 3'), ('cp', 'Channel Partner'), ('vp', 'Vice Partner'), ('rm', 'Relationship Manager'), ('team_head', 'Team Head'), ('team_leader', 'Team Leader'), ('branch', 'Branch Manager')], default='cp', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('level', models.IntegerField(default=1)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10)),
                ('experience_years', models.IntegerField(default=0)),
                ('specialization', models.CharField(blank=True, max_length=200)),
                ('languages_spoken', models.CharField(blank=True, max_length=200)),
                ('linkedin_url', models.URLField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('whatsapp_notifications', models.BooleanField(default=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('login_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parent_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_members', to=settings.AUTH_USER_MODEL)),
                ('sponsor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sponsored_users', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('customer_name', models.CharField(max_length=200)),
                ('customer_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('customer_address', models.TextField(blank=True)),
                ('customer_pan', models.CharField(blank=True, max_length=10)),
                ('customer_aadhar', models.CharField(blank=True, max_length=12)),
                ('co_applicant_name', models.CharField(blank=True, max_length=200)),
                ('co_applicant_phone', models.CharField(blank=True, max_length=15)),
                ('co_applicant_email', models.EmailField(blank=True, max_length=254)),
                ('co_applicant_relation', models.CharField(blank=True, max_length=50)),
                ('unit_type', models.CharField(choices=[('1bhk', '1 BHK'), ('2bhk', '2 BHK'), ('3bhk', '3 BHK'), ('4bhk', '4 BHK'), ('5bhk', '5 BHK'), ('studio', 'Studio'), ('duplex', 'Duplex'), ('penthouse', 'Penthouse'), ('villa', 'Villa'), ('plot', 'Plot'), ('shop', 'Shop'), ('office', 'Office'), ('warehouse', 'Warehouse'), ('other', 'Other')], max_length=20)),
                ('unit_number', models.CharField(blank=True, max_length=50)),
                ('unit_floor', models.CharField(blank=True, max_length=20)),
                ('unit_facing', models.CharField(blank=True, max_length=50)),
                ('carpet_area', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('built_up_area', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('super_area', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('other_charges', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('booking_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_mode', models.CharField(choices=[('cash', 'Cash'), ('cheque', 'Cheque'), ('dd', 'Demand Draft'), ('neft', 'NEFT'), ('rtgs', 'RTGS'), ('upi', 'UPI'), ('card', 'Credit/Debit Card'), ('loan', 'Home Loan'), ('other', 'Other')], default='cheque', max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('commission_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('commission_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('commission_due', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('level_1_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('level_2_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('gst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tds_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('requested', 'Booking Requested'), ('under_review', 'Under Review'), ('approved', 'Booking Approved'), ('rejected', 'Booking Rejected'), ('bba_issued', 'BBA Issued'), ('bba_signed', 'BBA Signed'), ('payment_pending', 'Payment Pending'), ('payment_received', 'Payment Received'), ('registration_pending', 'Registration Pending'), ('registered', 'Registered'), ('possession_ready', 'Possession Ready'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='requested', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('booking_date', models.DateField(default=django.utils.timezone.now)),
                ('expected_registration_date', models.DateField(blank=True, null=True)),
                ('possession_date', models.DateField(blank=True, null=True)),
                ('booking_form', models.FileField(blank=True, null=True, upload_to='bookings/forms/')),
                ('payment_proof', models.FileField(blank=True, null=True, upload_to='bookings/payments/')),
                ('customer_id_proof', models.FileField(blank=True, null=True, upload_to='bookings/documents/')),
                ('customer_address_proof', models.FileField(blank=True, null=True, upload_to='bookings/documents/')),
                ('customer_income_proof', models.FileField(blank=True, null=True, upload_to='bookings/documents/')),
                ('source', models.CharField(blank=True, help_text='Lead source', max_length=100)),
                ('remarks', models.TextField(blank=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('is_direct_sale', models.BooleanField(default=False, help_text='Team Head as CP')),
                ('is_priority', models.BooleanField(default=False)),
                ('is_vip_customer', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_followup_date', models.DateTimeField(blank=True, null=True)),
                ('next_followup_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_bookings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cp_code', models.CharField(blank=True, max_length=20, unique=True)),
                ('company_name', models.CharField(max_length=200)),
                ('company_type', models.CharField(choices=[('proprietorship', 'Proprietorship'), ('partnership', 'Partnership'), ('llp', 'Limited Liability Partnership'), ('pvt_ltd', 'Private Limited'), ('public_ltd', 'Public Limited')], default='proprietorship', max_length=50)),
                ('rera_number', models.CharField(blank=True, max_length=50)),
                ('rera_expiry', models.DateField(blank=True, null=True)),
                ('pan_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[A-Z]{5}[0-9]{4}[A-Z]{1}$', 'Enter a valid PAN number.')])),
                ('gst_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$', 'Enter a valid GST number.')])),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=20)),
                ('ifsc_code', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^[A-Z]{4}0[A-Z0-9]{6}$', 'Enter a valid IFSC code.')])),
                ('account_holder_name', models.CharField(blank=True, max_length=200)),
                ('bank_branch', models.CharField(blank=True, max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('country', models.CharField(default='India', max_length=100)),
                ('business_category', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('mixed', 'Mixed Development')], default='residential', max_length=100)),
                ('target_locations', models.TextField(blank=True, help_text='Comma-separated list of target locations')),
                ('total_bookings', models.IntegerField(default=0)),
                ('total_sales_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_commission_earned', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('can_create_vps', models.BooleanField(default=False)),
                ('total_vps', models.IntegerField(default=0)),
                ('mlm_level', models.IntegerField(default=1)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.IntegerField(default=0)),
                ('profile_document', models.FileField(blank=True, null=True, upload_to='cp_documents/')),
                ('rera_certificate', models.FileField(blank=True, null=True, upload_to='cp_documents/')),
                ('pan_card', models.FileField(blank=True, null=True, upload_to='cp_documents/')),
                ('gst_certificate', models.FileField(blank=True, null=True, upload_to='cp_documents/')),
                ('bank_proof', models.FileField(blank=True, null=True, upload_to='cp_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_leads', models.IntegerField(default=0)),
                ('converted_leads', models.IntegerField(default=0)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(blank=True, max_length=50, unique=True)),
                ('developer', models.CharField(max_length=200)),
                ('property_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('mixed', 'Mixed Development'), ('plots', 'Plots/Land')], default='residential', max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('description', models.TextField()),
                ('total_units', models.IntegerField(default=0)),
                ('available_units', models.IntegerField(default=0)),
                ('sold_units', models.IntegerField(default=0)),
                ('price_range', models.CharField(max_length=100)),
                ('min_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('max_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('price_per_sqft', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('launch_date', models.DateField(blank=True, null=True)),
                ('possession_date', models.DateField(blank=True, null=True)),
                ('rera_approval_date', models.DateField(blank=True, null=True)),
                ('rera_number', models.CharField(blank=True, max_length=50)),
                ('approval_status', models.CharField(blank=True, max_length=100)),
                ('amenities', models.TextField(blank=True, help_text='Comma-separated list of amenities')),
                ('specifications', models.TextField(blank=True)),
                ('floor_plans', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='projects/')),
                ('gallery_images', models.TextField(blank=True, help_text='JSON array of image URLs')),
                ('video_url', models.URLField(blank=True)),
                ('virtual_tour_url', models.URLField(blank=True)),
                ('brochure', models.FileField(blank=True, null=True, upload_to='brochures/')),
                ('floor_plan_pdf', models.FileField(blank=True, null=True, upload_to='floor_plans/')),
                ('price_list_pdf', models.FileField(blank=True, null=True, upload_to='price_lists/')),
                ('model_3d', models.FileField(blank=True, help_text='GLB/GLTF 3D model file', null=True, upload_to='3d_models/')),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('active', 'Active'), ('sold_out', 'Sold Out'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, max_length=500)),
                ('view_count', models.IntegerField(default=0)),
                ('inquiry_count', models.IntegerField(default=0)),
                ('booking_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mlm_activated', models.BooleanField(default=False)),
                ('mlm_activation_threshold', models.IntegerField(default=1000)),
                ('total_cp_count', models.IntegerField(default=0)),
                ('commission_visibility_internal', models.BooleanField(default=False)),
                ('default_commission_percentage', models.DecimalField(decimal_places=2, default=2.0, max_digits=5)),
                ('mlm_level_1_percentage', models.DecimalField(decimal_places=2, default=0.5, max_digits=5)),
                ('mlm_level_2_percentage', models.DecimalField(decimal_places=2, default=0.25, max_digits=5)),
                ('company_name', models.CharField(default='United Network', max_length=200)),
                ('company_address', models.TextField(blank=True)),
                ('company_phone', models.CharField(blank=True, max_length=15)),
                ('company_email', models.EmailField(blank=True, max_length=254)),
                ('company_website', models.URLField(blank=True)),
                ('gst_percentage', models.DecimalField(decimal_places=2, default=18.0, max_digits=5)),
                ('tds_percentage', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('whatsapp_enabled', models.BooleanField(default=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('max_login_attempts', models.IntegerField(default=5)),
                ('session_timeout_minutes', models.IntegerField(default=1440)),
                ('password_expiry_days', models.IntegerField(default=90)),
                ('booking_approval_required', models.BooleanField(default=True)),
                ('auto_commission_calculation', models.BooleanField(default=True)),
                ('customer_data_visibility', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='WhatsAppLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('welcome', 'Welcome Message'), ('login_notification', 'Login Notification'), ('booking_status', 'Booking Status Update'), ('commission_update', 'Commission Update'), ('project_collateral', 'Project Collateral'), ('mlm_notification', 'MLM Notification'), ('reminder', 'Reminder'), ('promotional', 'Promotional'), ('other', 'Other')], max_length=20)),
                ('message_content', models.TextField()),
                ('phone_number', models.CharField(max_length=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('provider', models.CharField(blank=True, help_text='Twilio, WhatsApp Business API, etc.', max_length=50)),
                ('message_id', models.CharField(blank=True, max_length=100)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCollateral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('collateral_type', models.CharField(choices=[('brochure', 'Brochure'), ('floor_plan', 'Floor Plan'), ('price_list', 'Price List'), ('specification', 'Specification'), ('location_map', 'Location Map'), ('amenities', 'Amenities'), ('gallery', 'Photo Gallery'), ('video', 'Video'), ('virtual_tour', 'Virtual Tour'), ('legal_docs', 'Legal Documents'), ('payment_plan', 'Payment Plan'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='collaterals/')),
                ('file_size', models.IntegerField(default=0, help_text='File size in bytes')),
                ('is_public', models.BooleanField(default=False, help_text='Visible to non-logged users')),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('registered', 'Registered Users'), ('cp_only', 'Channel Partners Only'), ('internal', 'Internal Team Only')], default='registered', max_length=20)),
                ('download_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaterals', to='crm.project')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('booking', 'Booking Related'), ('commission', 'Commission Related'), ('system', 'System Notification')], default='info', max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('action_url', models.URLField(blank=True)),
                ('action_text', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.booking')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('service_rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('communication_rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('feedback_text', models.TextField()),
                ('suggestions', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='crm.booking')),
                ('cp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.channelpartner')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.project')),
            ],
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('booking_commission', 'Booking Commission'), ('mlm_level_1', 'MLM Level 1 Commission'), ('mlm_level_2', 'MLM Level 2 Commission'), ('bonus', 'Bonus'), ('incentive', 'Incentive'), ('penalty', 'Penalty'), ('adjustment', 'Adjustment'), ('refund', 'Refund')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('gst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tds_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('level', models.IntegerField(default=0, help_text='0=Direct, 1=Level 1, 2=Level 2')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('paid', 'Paid'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('payment_mode', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('remarks', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.booking')),
                ('cp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.channelpartner')),
                ('parent_commission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.commission')),
                ('processed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processed_commissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='channelpartner',
            name='interested_projects',
            field=models.ManyToManyField(blank=True, to='crm.project'),
        ),
        migrations.AddField(
            model_name='channelpartner',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='channelpartner',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_cps', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='cp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.channelpartner'),
        ),
        migrations.AddField(
            model_name='booking',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.project'),
        ),
        migrations.AddField(
            model_name='booking',
            name='rm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('booking_created', 'Booking Created'), ('booking_updated', 'Booking Updated'), ('booking_approved', 'Booking Approved'), ('booking_rejected', 'Booking Rejected'), ('commission_calculated', 'Commission Calculated'), ('commission_paid', 'Commission Paid'), ('cp_registered', 'CP Registered'), ('vp_created', 'VP Created'), ('project_viewed', 'Project Viewed'), ('document_downloaded', 'Document Downloaded'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.booking')),
                ('cp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.channelpartner')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommissionSlab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('commission_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('level_1_percentage', models.DecimalField(decimal_places=2, default=0, help_text='VP commission', max_digits=5)),
                ('level_2_percentage', models.DecimalField(decimal_places=2, default=0, help_text="VP's sponsor commission", max_digits=5)),
                ('bonus_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('target_units', models.IntegerField(default=0, help_text='Target units for bonus')),
                ('valid_from', models.DateField(default=django.utils.timezone.now)),
                ('valid_till', models.DateField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.channelpartner')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.project')),
            ],
            options={
                'ordering': ['project', 'min_amount'],
                'unique_together': {('project', 'cp', 'min_amount', 'max_amount')},
            },
        ),
    ]
